/* Generated by Opal 0.6.3 */
(function($opal) {
  var $a, $b, TMP_1, $c, TMP_3, $d, TMP_5, $e, TMP_7, $f, TMP_9, $g, TMP_11, $h, TMP_13, $i, TMP_15, $j, TMP_17, $k, TMP_19, $l, TMP_21, $m, TMP_23, $n, TMP_25, $o, TMP_27, $p, TMP_28, $q, TMP_30, $r, TMP_32, $s, TMP_34, $t, TMP_36, $u, TMP_38, $v, TMP_40, $w, TMP_42, $x, TMP_45, self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $hash2 = $opal.hash2, $gvars = $opal.gvars, $hash = $opal.hash, $module = $opal.module, $klass = $opal.klass;
  if ($gvars.page == null) $gvars.page = nil;

  $opal.add_stubs(['$setup_client_config', '$add_template', '$lambda', '$new', '$round', '$/', '$reconnect_in', '$channel', '$error', '$reconnect_interval', '$map_key_class', '$key', '$notice', '$clear', '$flash', '$send', '$to_s', '$present?', '$_reloading', '$page', '$==', '$status', '$_reconnected', '$keys', '$model', '$===', '$!', '$try', '$public', '$config', '$validate', '$login_field', '$server?', '$_hashed_password=', '$create', '$_password=', '$add_model', '$add_routes', '$get', '$main_path', '$active_tab?', '$href', '$attrs', '$href=', '$text', '$private', '$+', '$or', '$_controller', '$params', '$_action', '$[]', '$split', '$path', '$url']);
  $scope.Volt.$setup_client_config($hash2([], {}));
  $gvars.page.$add_template("volt/notices/index/body/__ifg0/__if0", "\n    <div class=\"notices alert alert-info\">Reloading...</div>\n  ", $hash2([], {}));
  $gvars.page.$add_template("volt/notices/index/body/__ifg2/__if0/__ifg1/__if0", "  Reconnecting in <!-- $0 --><!-- $/0 --> sec", $hash(0, [($a = ($b = self).$lambda, $a._p = (TMP_1 = function(__p, __t, __c, __id){var self = TMP_1._s || this, $a, $b, TMP_2;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ContentBinding.$new(__p, __t, __c, __id, ($a = ($b = $scope.Proc).$new, $a._p = (TMP_2 = function(){var self = TMP_2._s || this;

    return (self.$channel().$reconnect_in()['$/'](1000.0)).$round()}, TMP_2._s = self, TMP_2), $a).call($b))}, TMP_1._s = self, TMP_1), $a).call($b)]));
  $gvars.page.$add_template("volt/notices/index/body/__ifg2/__if0", "\n    <div class=\"notices alert alert-info\">\n      Connection Lost... <!-- $0 --><!-- $/0 -->...\n      <!-- $1 --><!-- $/1 -->\n    </div>\n  ", $hash(0, [($a = ($c = self).$lambda, $a._p = (TMP_3 = function(__p, __t, __c, __id){var self = TMP_3._s || this, $a, $b, TMP_4;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ContentBinding.$new(__p, __t, __c, __id, ($a = ($b = $scope.Proc).$new, $a._p = (TMP_4 = function(){var self = TMP_4._s || this;

    return self.$channel().$error()}, TMP_4._s = self, TMP_4), $a).call($b))}, TMP_3._s = self, TMP_3), $a).call($c)], 1, [($a = ($d = self).$lambda, $a._p = (TMP_5 = function(__p, __t, __c, __id){var self = TMP_5._s || this, $a, $b, TMP_6;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.IfBinding.$new(__p, __t, __c, __id, [[($a = ($b = $scope.Proc).$new, $a._p = (TMP_6 = function(){var self = TMP_6._s || this;

    return self.$channel().$reconnect_interval()}, TMP_6._s = self, TMP_6), $a).call($b), "volt/notices/index/body/__ifg2/__if0/__ifg1/__if0"]])}, TMP_5._s = self, TMP_5), $a).call($d)]));
  $gvars.page.$add_template("volt/notices/index/body/__ifg4/__if0", "\n    <div class=\"notices alert alert-success\">Reconnected!</div>\n  ", $hash2([], {}));
  $gvars.page.$add_template("volt/notices/index/body/__each6/__ifg0/__if0/_rv1", "notices alert alert-<!-- $0 --><!-- $/0 -->", $hash(0, [($a = ($e = self).$lambda, $a._p = (TMP_7 = function(__p, __t, __c, __id){var self = TMP_7._s || this, $a, $b, TMP_8;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ContentBinding.$new(__p, __t, __c, __id, ($a = ($b = $scope.Proc).$new, $a._p = (TMP_8 = function(){var self = TMP_8._s || this;

    return self.$map_key_class(self.$key())}, TMP_8._s = self, TMP_8), $a).call($b))}, TMP_7._s = self, TMP_7), $a).call($e)]));
  $gvars.page.$add_template("volt/notices/index/body/__each6/__ifg0/__if0/__each3/__template/3", "\n          <p><!-- $0 --><!-- $/0 --></p>\n        ", $hash(0, [($a = ($f = self).$lambda, $a._p = (TMP_9 = function(__p, __t, __c, __id){var self = TMP_9._s || this, $a, $b, TMP_10;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ContentBinding.$new(__p, __t, __c, __id, ($a = ($b = $scope.Proc).$new, $a._p = (TMP_10 = function(){var self = TMP_10._s || this;

    return self.$notice()}, TMP_10._s = self, TMP_10), $a).call($b))}, TMP_9._s = self, TMP_9), $a).call($f)]));
  $gvars.page.$add_template("volt/notices/index/body/__each6/__ifg0/__if0", "\n      <div id=\"id0\">\n        <!-- $3 --><!-- $/3 -->\n      </div>\n    ", $hash("id0", [($a = ($g = self).$lambda, $a._p = (TMP_11 = function(__p, __t, __c, __id){var self = TMP_11._s || this, $a, $b, TMP_12;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.AttributeBinding.$new(__p, __t, __c, __id, "class", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_12 = function(){var self = TMP_12._s || this;

    return ($scope.Volt)._scope.StringTemplateRender.$new(__p, __c, "volt/notices/index/body/__each6/__ifg0/__if0/_rv1")}, TMP_12._s = self, TMP_12), $a).call($b))}, TMP_11._s = self, TMP_11), $a).call($g), ($a = ($h = self).$lambda, $a._p = (TMP_13 = function(__p, __t, __c, __id){var self = TMP_13._s || this, $a, $b, TMP_14;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.EventBinding.$new(__p, __t, __c, __id, "click", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_14 = function(event){var self = TMP_14._s || this;
if (event == null) event = nil;
    return self.$flash().$clear()}, TMP_14._s = self, TMP_14), $a).call($b))}, TMP_13._s = self, TMP_13), $a).call($h)], 3, [($a = ($i = self).$lambda, $a._p = (TMP_15 = function(__p, __t, __c, __id){var self = TMP_15._s || this, $a, $b, TMP_16;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.EachBinding.$new(__p, __t, __c, __id, ($a = ($b = $scope.Proc).$new, $a._p = (TMP_16 = function(){var self = TMP_16._s || this;

    return self.$flash().$send(("_" + self.$key().$to_s()))}, TMP_16._s = self, TMP_16), $a).call($b), "notice", "volt/notices/index/body/__each6/__ifg0/__if0/__each3/__template/3")}, TMP_15._s = self, TMP_15), $a).call($i)]));
  $gvars.page.$add_template("volt/notices/index/body/__each6/__template/6", "\n    <!-- $0 --><!-- $/0 -->\n  ", $hash(0, [($a = ($j = self).$lambda, $a._p = (TMP_17 = function(__p, __t, __c, __id){var self = TMP_17._s || this, $a, $b, TMP_18;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.IfBinding.$new(__p, __t, __c, __id, [[($a = ($b = $scope.Proc).$new, $a._p = (TMP_18 = function(){var self = TMP_18._s || this;

    return self.$flash().$send(("_" + self.$key().$to_s()))['$present?']()}, TMP_18._s = self, TMP_18), $a).call($b), "volt/notices/index/body/__each6/__ifg0/__if0"]])}, TMP_17._s = self, TMP_17), $a).call($j)]));
  $gvars.page.$add_template("volt/notices/index/body", "\n  <!-- $0 --><!-- $/0 -->\n  <!-- $2 --><!-- $/2 -->\n  <!-- $4 --><!-- $/4 -->\n  <!-- $6 --><!-- $/6 -->\n", $hash(0, [($a = ($k = self).$lambda, $a._p = (TMP_19 = function(__p, __t, __c, __id){var self = TMP_19._s || this, $a, $b, TMP_20;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.IfBinding.$new(__p, __t, __c, __id, [[($a = ($b = $scope.Proc).$new, $a._p = (TMP_20 = function(){var self = TMP_20._s || this;

    return self.$page().$_reloading()}, TMP_20._s = self, TMP_20), $a).call($b), "volt/notices/index/body/__ifg0/__if0"]])}, TMP_19._s = self, TMP_19), $a).call($k)], 2, [($a = ($l = self).$lambda, $a._p = (TMP_21 = function(__p, __t, __c, __id){var self = TMP_21._s || this, $a, $b, TMP_22;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.IfBinding.$new(__p, __t, __c, __id, [[($a = ($b = $scope.Proc).$new, $a._p = (TMP_22 = function(){var self = TMP_22._s || this;

    return self.$channel().$status()['$==']("reconnecting")}, TMP_22._s = self, TMP_22), $a).call($b), "volt/notices/index/body/__ifg2/__if0"]])}, TMP_21._s = self, TMP_21), $a).call($l)], 4, [($a = ($m = self).$lambda, $a._p = (TMP_23 = function(__p, __t, __c, __id){var self = TMP_23._s || this, $a, $b, TMP_24;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.IfBinding.$new(__p, __t, __c, __id, [[($a = ($b = $scope.Proc).$new, $a._p = (TMP_24 = function(){var self = TMP_24._s || this;

    return self.$page().$_reconnected()}, TMP_24._s = self, TMP_24), $a).call($b), "volt/notices/index/body/__ifg4/__if0"]])}, TMP_23._s = self, TMP_23), $a).call($m)], 6, [($a = ($n = self).$lambda, $a._p = (TMP_25 = function(__p, __t, __c, __id){var self = TMP_25._s || this, $a, $b, TMP_26;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.EachBinding.$new(__p, __t, __c, __id, ($a = ($b = $scope.Proc).$new, $a._p = (TMP_26 = function(){var self = TMP_26._s || this;

    return self.$flash().$keys()}, TMP_26._s = self, TMP_26), $a).call($b), "key", "volt/notices/index/body/__each6/__template/6")}, TMP_25._s = self, TMP_25), $a).call($n)]));
  (function($base) {
    var self = $module($base, 'Volt');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $NoticesController(){};
      var self = $NoticesController = $klass($base, $super, 'NoticesController', $NoticesController);

      var def = self._proto, $scope = self._scope;

      self.$model("page");

      def.$hey = function() {
        var self = this;

        return "yep";
      };

      return (def.$map_key_class = function(key) {
        var self = this, $case = nil;

        return (function() {$case = key;if ("errors"['$===']($case)) {return "danger"}else if ("warnings"['$===']($case)) {return "warning"}else if ("successes"['$===']($case)) {return "success"}else {return "info"}})();
      }, nil) && 'map_key_class';
    })(self, $scope.ModelController)
    
  })(self);
  if ((($a = $scope.RUBY_PLATFORM['$==']("opal")['$!']()) !== nil && (!$a._isBoolean || $a == true))) {
    };
  (function($base) {
    var self = $module($base, 'Volt');

    var def = self._proto, $scope = self._scope;

    (function($base, $super) {
      function $User(){};
      var self = $User = $klass($base, $super, 'User', $User);

      var def = self._proto, $scope = self._scope;

      $opal.defs(self, '$login_field', function() {
        var $a, self = this;

        if ((($a = $scope.Volt.$config().$public().$try("auth").$try("use_username")) !== nil && (!$a._isBoolean || $a == true))) {
          return "username"
          } else {
          return "email"
        };
      });

      self.$validate(self.$login_field(), $hash2(["unique", "length"], {"unique": true, "length": 8}));

      if ($scope.RUBY_PLATFORM['$==']("opal")) {
        self.$validate("password", $hash2(["length"], {"length": 8}))};

      return (def['$password='] = function(val) {
        var $a, self = this;

        if ((($a = $scope.Volt['$server?']()) !== nil && (!$a._isBoolean || $a == true))) {
          return self['$_hashed_password='](($scope.BCrypt)._scope.Password.$create(val))
          } else {
          return self['$_password='](val)
        };
      }, nil) && 'password=';
    })(self, $scope.Model)
    
  })(self);
  $gvars.page.$add_model("user");
  (function($base, $super) {
    function $QueryTasks(){};
    var self = $QueryTasks = $klass($base, $super, 'QueryTasks', $QueryTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  (function($base, $super) {
    function $StoreTasks(){};
    var self = $StoreTasks = $klass($base, $super, 'StoreTasks', $StoreTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  (function($base, $super) {
    function $UserTasks(){};
    var self = $UserTasks = $klass($base, $super, 'UserTasks', $UserTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  (function($base, $super) {
    function $QueryTasks(){};
    var self = $QueryTasks = $klass($base, $super, 'QueryTasks', $QueryTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  (function($base, $super) {
    function $StoreTasks(){};
    var self = $StoreTasks = $klass($base, $super, 'StoreTasks', $StoreTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  (function($base, $super) {
    function $UserTasks(){};
    var self = $UserTasks = $klass($base, $super, 'UserTasks', $UserTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  ($a = ($o = $gvars.page).$add_routes, $a._p = (TMP_27 = function(){var self = TMP_27._s || this;

  self.$get("/about", $hash2(["_action"], {"_action": "about"}));
    return self.$get("/", $hash2([], {}));}, TMP_27._s = self, TMP_27), $a).call($o);
  $gvars.page.$add_template("main/main/about/title", "\n  About\n\n", $hash2([], {}));
  $gvars.page.$add_template("main/main/about/body", "\n  <h1>About</h1>\n\n  <p>About page...</p>\n", $hash2([], {}));
  $gvars.page.$add_template("main/main/index/title", "\n  Home\n\n", $hash2([], {}));
  $gvars.page.$add_template("main/main/index/body", "\n  <h1>Home</h1>\n\n", $hash2([], {}));
  $gvars.page.$add_template("main/main/main/title", "\n  <!-- $0 --><!-- $/0 -->\n\n", $hash(0, [($a = ($p = self).$lambda, $a._p = (TMP_28 = function(__p, __t, __c, __id){var self = TMP_28._s || this, $a, $b, TMP_29;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.TemplateBinding.$new(__p, __t, __c, __id, "main/main/main/title", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_29 = function(){var self = TMP_29._s || this;

    return [self.$main_path(), "title", $hash2(["controller_group"], {"controller_group": "main"})]}, TMP_29._s = self, TMP_29), $a).call($b))}, TMP_28._s = self, TMP_28), $a).call($p)]));
  $gvars.page.$add_template("main/main/main/body", "\n\n  <nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n      <!-- Brand and toggle get grouped for better mobile display -->\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#main-navigation\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" href=\"#\">Volt Blog</a>\n      </div>\n\n      <div class=\"collapse navbar-collapse\" id=\"main-navigation\">\n        <ul class=\"nav navbar-nav navbar-right\">\n          <!-- $0 --><!-- $/0 -->\n          <!-- $1 --><!-- $/1 -->\n        </ul>\n      </div><!-- /.navbar-collapse -->\n    </div><!-- /.container-fluid -->\n  </nav>\n\n  <!-- main content -->\n  <div class=\"container\">\n    <!-- $2 --><!-- $/2 -->\n    <!-- $3 --><!-- $/3 -->\n  </div>\n\n  <!-- footer -->\n  <footer class=\"footer\">\n    <div class=\"container text-muted text-center\">\n      <p>&copy; Company 2014</p>\n    </div>\n  </footer>\n\n\n<!-- nav helper -->\n", $hash(0, [($a = ($q = self).$lambda, $a._p = (TMP_30 = function(__p, __t, __c, __id){var self = TMP_30._s || this, $a, $b, TMP_31;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ComponentBinding.$new(__p, __t, __c, __id, "main/main/main/body", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_31 = function(){var self = TMP_31._s || this;

    return ["nav", $hash2(["href", "text"], {"href": "/", "text": "Blog"})]}, TMP_31._s = self, TMP_31), $a).call($b))}, TMP_30._s = self, TMP_30), $a).call($q)], 1, [($a = ($r = self).$lambda, $a._p = (TMP_32 = function(__p, __t, __c, __id){var self = TMP_32._s || this, $a, $b, TMP_33;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ComponentBinding.$new(__p, __t, __c, __id, "main/main/main/body", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_33 = function(){var self = TMP_33._s || this;

    return ["nav", $hash2(["href", "text"], {"href": "/about", "text": "About"})]}, TMP_33._s = self, TMP_33), $a).call($b))}, TMP_32._s = self, TMP_32), $a).call($r)], 2, [($a = ($s = self).$lambda, $a._p = (TMP_34 = function(__p, __t, __c, __id){var self = TMP_34._s || this, $a, $b, TMP_35;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ComponentBinding.$new(__p, __t, __c, __id, "main/main/main/body", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_35 = function(){var self = TMP_35._s || this;

    return ["volt/notices", $hash2([], {})]}, TMP_35._s = self, TMP_35), $a).call($b))}, TMP_34._s = self, TMP_34), $a).call($s)], 3, [($a = ($t = self).$lambda, $a._p = (TMP_36 = function(__p, __t, __c, __id){var self = TMP_36._s || this, $a, $b, TMP_37;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.TemplateBinding.$new(__p, __t, __c, __id, "main/main/main/body", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_37 = function(){var self = TMP_37._s || this;

    return [self.$main_path(), "body", $hash2(["controller_group"], {"controller_group": "main"})]}, TMP_37._s = self, TMP_37), $a).call($b))}, TMP_36._s = self, TMP_36), $a).call($t)]));
  $gvars.page.$add_template("main/main/main/nav/_rv1/__ifg0/__if0", "active", $hash2([], {}));
  $gvars.page.$add_template("main/main/main/nav/_rv1", "<!-- $0 --><!-- $/0 -->", $hash(0, [($a = ($u = self).$lambda, $a._p = (TMP_38 = function(__p, __t, __c, __id){var self = TMP_38._s || this, $a, $b, TMP_39;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.IfBinding.$new(__p, __t, __c, __id, [[($a = ($b = $scope.Proc).$new, $a._p = (TMP_39 = function(){var self = TMP_39._s || this;

    return self['$active_tab?']()}, TMP_39._s = self, TMP_39), $a).call($b), "main/main/main/nav/_rv1/__ifg0/__if0"]])}, TMP_38._s = self, TMP_38), $a).call($u)]));
  $gvars.page.$add_template("main/main/main/nav", "\n  <li id=\"id0\">\n    <a id=\"id2\"><!-- $3 --><!-- $/3 --></a>\n  </li>\n", $hash("id0", [($a = ($v = self).$lambda, $a._p = (TMP_40 = function(__p, __t, __c, __id){var self = TMP_40._s || this, $a, $b, TMP_41;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.AttributeBinding.$new(__p, __t, __c, __id, "class", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_41 = function(){var self = TMP_41._s || this;

    return ($scope.Volt)._scope.StringTemplateRender.$new(__p, __c, "main/main/main/nav/_rv1")}, TMP_41._s = self, TMP_41), $a).call($b))}, TMP_40._s = self, TMP_40), $a).call($v)], "id2", [($a = ($w = self).$lambda, $a._p = (TMP_42 = function(__p, __t, __c, __id){var self = TMP_42._s || this, $a, $b, TMP_43, $c, TMP_44;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.AttributeBinding.$new(__p, __t, __c, __id, "href", ($a = ($b = $scope.Proc).$new, $a._p = (TMP_43 = function(){var self = TMP_43._s || this;

    return self.$attrs().$href()}, TMP_43._s = self, TMP_43), $a).call($b), ($a = ($c = $scope.Proc).$new, $a._p = (TMP_44 = function(val){var self = TMP_44._s || this;
if (val == null) val = nil;
    return self.$attrs()['$href=']((val))}, TMP_44._s = self, TMP_44), $a).call($c))}, TMP_42._s = self, TMP_42), $a).call($w)], 3, [($a = ($x = self).$lambda, $a._p = (TMP_45 = function(__p, __t, __c, __id){var self = TMP_45._s || this, $a, $b, TMP_46;
if (__p == null) __p = nil;if (__t == null) __t = nil;if (__c == null) __c = nil;if (__id == null) __id = nil;
  return ($scope.Volt)._scope.ContentBinding.$new(__p, __t, __c, __id, ($a = ($b = $scope.Proc).$new, $a._p = (TMP_46 = function(){var self = TMP_46._s || this;

    return self.$attrs().$text()}, TMP_46._s = self, TMP_46), $a).call($b))}, TMP_45._s = self, TMP_45), $a).call($x)]));
  (function($base, $super) {
    function $MainController(){};
    var self = $MainController = $klass($base, $super, 'MainController', $MainController);

    var def = self._proto, $scope = self._scope;

    def.$index = function() {
      var self = this;

      return nil;
    };

    def.$about = function() {
      var self = this;

      return nil;
    };

    self.$private();

    def.$main_path = function() {
      var self = this;

      return self.$params().$_controller().$or("main")['$+']("/")['$+'](self.$params().$_action().$or("index"));
    };

    return (def['$active_tab?'] = function() {
      var self = this;

      return self.$url().$path().$split("/")['$[]'](1)['$=='](self.$attrs().$href().$split("/")['$[]'](1));
    }, nil) && 'active_tab?';
  })(self, ($scope.Volt)._scope.ModelController);
  (function($base, $super) {
    function $User(){};
    var self = $User = $klass($base, $super, 'User', $User);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.User);
  $gvars.page.$add_model("user");
  (function($base, $super) {
    function $QueryTasks(){};
    var self = $QueryTasks = $klass($base, $super, 'QueryTasks', $QueryTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  (function($base, $super) {
    function $StoreTasks(){};
    var self = $StoreTasks = $klass($base, $super, 'StoreTasks', $StoreTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
  return (function($base, $super) {
    function $UserTasks(){};
    var self = $UserTasks = $klass($base, $super, 'UserTasks', $UserTasks);

    var def = self._proto, $scope = self._scope;

    return nil;
  })(self, ($scope.Volt)._scope.TaskHandler);
})(Opal);
